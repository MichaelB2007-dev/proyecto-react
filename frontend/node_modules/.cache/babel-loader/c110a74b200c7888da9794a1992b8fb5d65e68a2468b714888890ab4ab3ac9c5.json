{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    const response = await fetch(\"http://localhost:3001/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setMensaje(`✅ Bienvenido, ${email}`);\n      setEsError(false);\n      if (setIsLoggedIn) {\n        setIsLoggedIn(true);\n      }\n      if (data.rol === \"admin\") {\n        navigate(\"/dashboard\");\n      } else {\n        navigate(\"/home\");\n      }\n    } else {\n      setMensaje(\"❌ Usuario o contraseña incorrectos\");\n      setEsError(true);\n    }\n  } catch (error) {\n    console.error(\"Error al iniciar sesión:\", error);\n    setMensaje(\"❌ Error del servidor\");\n    setEsError(true);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","password","data","json","ok","setMensaje","setEsError","setIsLoggedIn","rol","navigate","error","console"],"sources":["C:/Users/Alumno/Descargas/proyecto-react/frontend/src/components/login.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:3001/api/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      setMensaje(`✅ Bienvenido, ${email}`);\r\n      setEsError(false);\r\n      if (setIsLoggedIn) {\r\n        setIsLoggedIn(true);\r\n      }\r\n\r\n      if (data.rol === \"admin\") {\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        navigate(\"/home\");\r\n      }\r\n    } else {\r\n      setMensaje(\"❌ Usuario o contraseña incorrectos\");\r\n      setEsError(true);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error al iniciar sesión:\", error);\r\n    setMensaje(\"❌ Error del servidor\");\r\n    setEsError(true);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,IAAIV,QAAQ,CAACW,EAAE,EAAE;MACfC,UAAU,CAAC,iBAAiBL,KAAK,EAAE,CAAC;MACpCM,UAAU,CAAC,KAAK,CAAC;MACjB,IAAIC,aAAa,EAAE;QACjBA,aAAa,CAAC,IAAI,CAAC;MACrB;MAEA,IAAIL,IAAI,CAACM,GAAG,KAAK,OAAO,EAAE;QACxBC,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,MAAM;QACLA,QAAQ,CAAC,OAAO,CAAC;MACnB;IACF,CAAC,MAAM;MACLJ,UAAU,CAAC,oCAAoC,CAAC;MAChDC,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChDL,UAAU,CAAC,sBAAsB,CAAC;IAClCC,UAAU,CAAC,IAAI,CAAC;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
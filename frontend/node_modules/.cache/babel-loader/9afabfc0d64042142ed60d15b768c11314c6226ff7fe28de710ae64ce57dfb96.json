{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alumno\\\\Descargas\\\\proyecto-react\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\n\n// Importa tus componentes\nimport Navbar from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport DashboardContent from './components/DashboardContent';\nimport Login from './components/login';\nimport Register from './components/registrarse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para saber si el usuario está logueado\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setIsLoggedIn: setIsLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/registrarse\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-fluid\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DashboardContent, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Navbar","Sidebar","DashboardContent","Login","Register","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","className","_c","$RefreshReg$"],"sources":["C:/Users/Alumno/Descargas/proyecto-react/frontend/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n// Importa tus componentes\r\nimport Navbar from './components/Navbar';\r\nimport Sidebar from './components/Sidebar';\r\nimport DashboardContent from './components/DashboardContent';\r\nimport Login from './components/login'; \r\nimport Register from './components/registrarse'; \r\n\r\nfunction App() {\r\n  // Estado para saber si el usuario está logueado\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n\r\n        {/* Página de login (inicio) */}\r\n        <Route\r\n          path=\"/\"\r\n          element={<Login setIsLoggedIn={setIsLoggedIn} />}\r\n        />\r\n\r\n        {/* ✅ Página de registro */}\r\n        <Route\r\n          path=\"/registrarse\"\r\n          element={\r\n            isLoggedIn ? <Navigate to=\"/dashboard\" /> : <Register />\r\n          }\r\n        />\r\n\r\n        {/* Página de dashboard (solo si está logueado) */}\r\n        <Route\r\n          path=\"/dashboard\"\r\n          element={\r\n            isLoggedIn ? (\r\n              <div className=\"App\">\r\n                <Navbar />\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <Sidebar />\r\n                    <DashboardContent />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Navigate to=\"/\" />\r\n            )\r\n          }\r\n        />\r\n\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}